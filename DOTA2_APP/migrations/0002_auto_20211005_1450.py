# Generated by Django 3.2.7 on 2021-10-05 08:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('DOTA2_APP', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('gaming_name', models.CharField(max_length=266)),
                ('player_id', models.CharField(blank=True, max_length=256, null=True)),
                ('steam_id', models.CharField(blank=True, max_length=256, null=True)),
                ('role', models.CharField(choices=[('SafeLane', 'SafeLane'), ('MidLane', 'MidLane'), ('OffLane', 'OffLane'), ('Soft Support', 'Soft Support'), ('Hard Support', 'Hard Support')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('shortname', models.CharField(blank=True, max_length=10, null=True)),
                ('slug', models.SlugField(blank=True, max_length=500, unique=True)),
                ('logo', django_resized.forms.ResizedImageField(blank=True, crop=None, default='team/logo/default.png', force_format='PNG', keep_meta=True, quality=75, size=[500, 300], upload_to='team/logo/')),
                ('originalUpload', models.ImageField(default='team/logo/default.png', upload_to='')),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(to='DOTA2_APP.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('slug', models.SlugField(blank=True, max_length=500, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', models.ImageField(upload_to='tournament/logo/')),
                ('prizepool', models.PositiveIntegerField(blank=True, null=True)),
                ('pub_date', models.DateTimeField(null=True, verbose_name='date published')),
                ('reg_deadline', models.DateTimeField(null=True, verbose_name='Registration Deadline')),
                ('start_date', models.DateField(verbose_name='Start date')),
                ('end_date', models.DateField(verbose_name='End date')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='test1',
            name='name',
        ),
        migrations.AddField(
            model_name='test1',
            name='test_title',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.CreateModel(
            name='TournamentParticipate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DOTA2_APP.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DOTA2_APP.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Group Stage', 'Group Stage'), ('Play Offs', 'Play Offs')], max_length=100)),
                ('team1_score', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('team2_score', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('team1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team1', to='DOTA2_APP.team')),
                ('team2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team2', to='DOTA2_APP.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DOTA2_APP.tournament')),
                ('winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='winner', to='DOTA2_APP.team')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('phoneNo', models.CharField(max_length=11)),
                ('auth_token', models.CharField(max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Matches',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Match Date')),
                ('match_number', models.IntegerField(blank=True, null=True)),
                ('match_round', models.IntegerField()),
                ('status', models.CharField(choices=[('BYE', 'BYE'), ('Not Scheduled', 'Not Scheduled'), ('Scheduled', 'Scheduled'), ('Finished', 'Finished')], default='Not Scheduled', max_length=20)),
                ('team_1_score', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('team_2_score', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('left_previous', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='left_next_match', to='DOTA2_APP.matches')),
                ('right_previous', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='right_next_match', to='DOTA2_APP.matches')),
                ('team_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='left_matches', to='DOTA2_APP.team')),
                ('team_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='right_matches', to='DOTA2_APP.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DOTA2_APP.tournament')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matches_won', to='DOTA2_APP.team')),
            ],
            options={
                'verbose_name_plural': 'Matches',
            },
        ),
    ]
